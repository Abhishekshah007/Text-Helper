{"version":3,"sources":["component/Navbar.js","component/AlertBox.js","component/Textform.js","component/Aboutus.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","aboutus","contactus","onClick","switchMode","htmlFor","AlertBox","style","height","alert","role","msg","Textform","str","useState","text","changeText","color","heading","value","onChange","val","target","backgroundColor","rows","disabled","length","ShowAlert","newVal","toUpperCase","toLowerCase","vowels","match","join","consonants","split","filter","element","replace","Aboutus","protoTypes","PropTypes","string","isRequired","defaultProps","App","setmode","setalert","setTimeout","document","body","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1bbae1e6.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n<nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\"  to=\"/aboutus\">\r\n              {props.aboutus}\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/\">{props.contactus}</Link>\r\n        </li>\r\n       \r\n      </ul>\r\n      \r\n    </div>\r\n    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.switchMode} id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.mode}</label>\r\n</div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n\r\nNavbar.protoTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutus: PropTypes.string.isRequired,\r\n    contactus: PropTypes.string.isRequired,\r\n\r\n}\r\n\r\n\r\nNavbar.defaultProps ={\r\n    title: \"Head\",\r\n    aboutus: \"About Us\",\r\n    contactus: \"contact Us\"\r\n}\r\n","\r\nimport React from 'react';\r\n\r\n\r\nexport default function AlertBox (props) {\r\n\r\n    return(\r\n        \r\n<div className=\"container\" style={{height:'50px'}}>\r\n        {\r\nprops.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n    <strong>{props.alert.msg}</strong>\r\n  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n</div>\r\n}\r\n</div>\r\n       \r\n    )\r\n}","import React, {useState} from 'react';\r\n\r\n\r\nexport default function Textform(props) {\r\n\r\n\r\n\r\n    \r\n    // const [btnText,chBtnText] = useState ('Enable Dark Mode');\r\n\r\n    // const [bg, changebg] = useState({color: 'black', \r\n    // backgroundColor: 'white'\r\n\r\n    //     });\r\n\r\n\r\n    //     const changeBg = () => {\r\n    //         if (bg.color === 'white') {\r\n                \r\n    //             changebg ({\r\n    //                 color:'black',\r\n    //                 backgroundColor:'white'\r\n    //             })\r\n    //             chBtnText('Enable dark Mode');\r\n                \r\n    //         } else {\r\n    //             changebg ({\r\n    //                 color:'white',\r\n    //                 backgroundColor:'black'\r\n    //             })\r\n               \r\n    //             chBtnText('Enable light Mode');\r\n    //         }\r\n    //     }\r\n\r\n\r\n    const [text, changeText] = useState('');\r\n   \r\n    const valueBox =(val) => {\r\n    \r\n        changeText(val.target.value);\r\n        \r\n\r\n    };\r\n\r\n    const clear_text = () => {\r\n        let newText = \"\";\r\n        changeText(newText);\r\n          props.ShowAlert(\r\n             \"Text has been cleared\",\r\n              \"danger\"\r\n          )\r\n    }\r\n\r\n    const uppercaseMethod =() => {\r\n\r\n        var newVal = text.toUpperCase();\r\n        changeText(newVal);\r\n          props.ShowAlert(\r\n             \"Text has been changed to UPPERCASE\",\r\n              \"success\"\r\n          )\r\n    }\r\n\r\n    const lowercaseMethod =() => {\r\n\r\n        var newVal = text.toLowerCase();\r\n        changeText(newVal);\r\n          props.ShowAlert(\r\n             \"Text has been changed to lowercase\",\r\n              \"success\"\r\n          )\r\n    }\r\n\r\n    const find_Vowels =() => {\r\n\r\n        const vowels = text.match(/[aeiou]/gi);\r\n        changeText(vowels.join(\" \"));\r\n          props.ShowAlert(\r\n             \"Vowels has been eliminated\",\r\n              \"warning\"\r\n          )\r\n\r\n    }\r\n\r\n    const find_consonants =() => {\r\n        const consonants = text.match(/[^aeiou]/gi);\r\n\r\n        changeText(consonants.join(\" \"));\r\n          props.ShowAlert(\r\n             \"consonants has been eliminated\",\r\n              \"warning\"\r\n          )\r\n\r\n    }\r\n     const countWords = (str) => {\r\n                 str = str.replace(/(\\s*)|(\\s*$)/gi,\"\");\r\n                 str = str.replace(/[ ]{2,}/gi,\" \");\r\n                 str = str.replace(/\\n /,\"\\n\");\r\n                 return str.length;\r\n              }\r\n\r\n    \r\n    return (\r\n\r\n            <>    \r\n<div className={`container mb-3 `} style={{color:props.mode==='black'?'white':'black'}} >\r\n    <h3 className=\"mt-4\">{props.heading}</h3>\r\n    {/* <button className=\"btn btn-primary my-3\" onClick={changeBg}>{btnText}</button> */}\r\n  <textarea className=\"form-control\" value ={text} onChange={valueBox} style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black'}} id=\"exampleFormControlTextarea1\" rows=\"8\"></textarea>\r\n  <button disabled={text.length===0} className=\"btn btn-primary my-1 \" onClick={clear_text}>Clear Text !</button>\r\n  <button disabled={text.length===0} className=\"btn btn-primary my-1 mx-2\" onClick={uppercaseMethod}>Uppercase !</button>\r\n  <button disabled={text.length===0} className=\"btn btn-primary my-1 mx-2\" onClick={lowercaseMethod}>Lowercase !</button>\r\n  <button disabled={text.length===0}className=\"btn btn-primary my-1 mx-2\" onClick={find_Vowels}>Find Vowel !</button>\r\n  <button disabled={text.length===0} className=\"btn btn-primary my-1 mx-2\" onClick={find_consonants}>Find Consonants !</button>\r\n</div>\r\n\r\n<div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}> \r\n    <h2>Your Input Details:</h2>\r\n    <p>{text.split(/\\s+/).filter((element)=>{return element!=0 }).length} Words And {countWords(text)} Charcter</p>\r\n    <p>Time taken to read {0.08*text.split(\" \").filter((element)=>{return element!=0 }).length} </p>\r\n    <h2>Preview</h2>\r\n    <p className=\"b\">{text===''?'Enter text above to preveiw result':text}</p>\r\n</div>\r\n      </>  \r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Aboutus(props) {\r\n    return (\r\n       <>\r\n       <div className=\"container-fluid my-6\" style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black'}}>\r\n       <h1 className=\"text-center\"  >About Us</h1>\r\n<p>This App help you to perform some on your text which you need occaisnaly.</p>\r\n</div>\r\n       </>\r\n    )\r\n}\r\n","\nimport './App.css';\n\nimport Navbar from './component/Navbar';\n\nimport AlertBox from './component/AlertBox';\nimport Textform from './component/Textform';\nimport React, { useState } from 'react';\nimport Aboutus from './component/Aboutus';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setmode] = useState('light');\n  const [alert, setalert] = useState(null);\n\n let ShowAlert = (msg,type) =>{\n\nsetalert({\n  msg:msg,\n  type:type\n})\nsetTimeout(() => {\n  setalert(null)\n}, 1500);\n\n  }\n\n  const switchMode = () => {\n    if (mode==='light') {\n      setmode('dark');\n      document.body.style.backgroundColor = '#0d1635';\n      ShowAlert(\"Dark Mode Enabled\",\n        \"success\"\n      );\n    } else {\n      setmode('light');\n      document.body.style.backgroundColor = 'snow';\n      ShowAlert(\"Light Mode Enabled\",\n        \"success\"\n      );\n    }\n  }\n\n\n  return (\n    <>\n<Router>\n    <Navbar title=\"Text Helper\" mode ={mode} switchMode = {switchMode} />\n    <AlertBox alert={alert}/>\n\n\n    <div className=\"container my-3\">\n    \n    <Switch>\n          <Route path=\"/aboutus\">\n            <Aboutus />\n          </Route>\n        \n          <Route path=\"/\">\n          <Textform heading=\"Enter Text Below(En):\"ShowAlert={ShowAlert} mode={mode}/>\n          </Route>\n        </Switch>\n      \n    </div>\n    </Router>\n\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}